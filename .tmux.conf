# bind prefix key to C-a as in GNU screen
unbind C-b
set -g prefix C-a
bind a send-prefix

# last window as in GNU screen
unbind ^A
bind ^A last-window

# new pane with same path as a last pane
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# switch panes using Alt-arrow without prefix
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# extend history limit
set -g history-limit 10000

# set vi mode
setw -g mode-keys vi

# turn the mouse off
set -g mouse off

# extend pane indicators show time
set -g display-panes-time 3000

# window titles
#  #H  hostname of local host
#  #I  current window index
#  #P  current pane index
#  #S  session name
#  #T  current window title
#  #W  current window name
set -g set-titles on
#set -g set-titles-string '#H:#S.#I.#P | #W | #T'
# see tmux show-window-option -g window-status-current-format
set -g set-titles-string '#S | #I:#W#{?window_flags,#{window_flags}, } | #T'

# don't display status
#set -g status off
# don't display clock - more space for pane_title
set -g status-right '#{=33:pane_title}'
# limit the length of right status
set -g status-right-length 30
# don't update status periodically
set -g status-interval 0

# limit the length of the displayed window name of inactive windows
setw -g window-status-format "#I:#{=10:window_name}#F"
# don't allow programs to change the window name
setw -g allow-rename off

# no delay for ESC
set -sg escape-time 0

# color settings
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc,xterm-256color-italic:Tc"
source-file ~/.config/tmux/color-solarized-256.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l
